#!/usr/bin/env bash

set -euo pipefail

declare -r INSTANCE_ID="${DEV_BOX_INSTANCE_ID:?required}"
declare -r AWS_REGION="${DEV_BOX_AWS_REGION:?required}"

devbox_start() {
	if [ "$(devbox_status)" = "running" ]; then
		return 0
	else
		aws \
			--profile slashdeploy \
			--region "${AWS_REGION}" \
			ec2 start-instances \
			--instance-ids "${INSTANCE_ID}" > /dev/null
	fi
}

devbox_stop() {
	if [ "$(devbox_status)" = "stoppped" ]; then
		return 0
	else
		aws \
			--profile slashdeploy \
			--region "${AWS_REGION}" \
			ec2 stop-instances \
			--instance-ids "${INSTANCE_ID}" > /dev/null
	fi
}

devbox_status() {
	local state="$(aws \
		--profile slashdeploy --region "${AWS_REGION}" \
		ec2 describe-instance-status \
		--instance-ids "${INSTANCE_ID}" \
		| jq -re '.InstanceStatuses[0].InstanceState.Name'
	)"

	if [ "${state}" = "null" ]; then
		echo "stopped"
	else
		echo "${state}"
	fi
}

devbox_ssh() {
	exec ssh "${DEV_BOX_HOST_NAME:?required}"
}

main() {
	case "${1:-}" in
		start)
			shift
			devbox_start "$@"
			;;
		stop)
			shift
			devbox_stop "$@"
			;;
		ssh)
			shift
			devbox_start
			devbox_ssh "$@"
			;;
		status)
			shift
			devbox_status "$@"
			;;
		*)
			echo "Unknown command" 1>&2
			return 1
	esac
}

main "$@"
